type Query {
    getCustomerDataTeste: CustomerDataOutputTeste!
    @resolver(class: "Estudo\\TesteGraphQL\\Model\\Resolver\\GetCustomerData")
    @doc(description:"Return customer data")
}

type Mutation {
    updateCustomerTeste(
        input: CustomerDataInputTeste! @doc(description: "Customer data to update")
    ): CustomerDataOutputTeste
    @resolver(class: "Estudo\\TesteGraphQL\\Model\\Resolver\\UpdateCustomer")
    @doc(description: "Update customer data")
}

input CustomerDataInputTeste {
    firstname: String! @doc(description: "Customer new firstname")
    dob: String @doc(description: "Customer new dob, format: YYYY-MM-DD")
}

type CustomerDataOutputTeste {
    email: String @doc(description: "Customer email")
    name: String @doc(description: "Customer name")
    dob: String @doc(description: "Customer date of birth, can be empty")
}
